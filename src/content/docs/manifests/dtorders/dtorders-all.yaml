apiVersion: v1
kind: Namespace
metadata:
  name: dtorders

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer
  namespace: dtorders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dt-orders
      app.kubernetes.io/name: customer-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: customer-service
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dt-orders
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/created-by: dynatrace-demos
      annotations:
        owner: Team Services
        chat-channel: dev-team-services
    spec:
      containers:
        - name: customer
          image: dtdemos/dt-orders-customer-service:1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: cust-service
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dt-orders service=customer-service"

---
apiVersion: v1
kind: Service
metadata:
  name: customer
  namespace: dtorders
  labels:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: customer-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: customer
  selector:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: customer-service
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customer-ingress
  namespace: dtorders
spec:
  ingressClassName: nginx
  rules:
    - host: dtorders-customer.dev.local.nip.io
      http:
        paths:
          - backend:
              service:
                name: customer
                port:
                  number: 8080
            path: /
            pathType: Prefix

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog
  namespace: dtorders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dt-orders
      app.kubernetes.io/name: catalog-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "catalog-service"
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: "service"
        app.kubernetes.io/part-of: "dt-orders"
        app.kubernetes.io/managed-by: "helm"
        app.kubernetes.io/created-by: "dynatrace-demos"
      annotations:
        owner: Team Services
        chat-channel: dev-team-services

    spec:
      containers:
        - name: catalog
          image: dtdemos/dt-orders-catalog-service:1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: catalog
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dt-orders service=catalog-service"

---
apiVersion: v1
kind: Service
metadata:
  name: catalog
  namespace: dtorders
  labels:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: catalog-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: catalog
  selector:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: catalog-service
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: catalog-ingress
  namespace: dtorders
spec:
  ingressClassName: nginx
  rules:
    - host: dtorders-catalog.dev.local.nip.io
      http:
        paths:
          - backend:
              service:
                name: catalog
                port:
                  number: 8080
            path: /
            pathType: Prefix

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  namespace: dtorders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dt-orders
      app.kubernetes.io/name: order-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: order-service
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dt-orders
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/created-by: dynatrace-demos
      annotations:
        owner: Team Services
        chat-channel: dev-team-services
    spec:
      containers:
        - name: order
          image: dtdemos/dt-orders-order-service:1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: order-service
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dt-orders service=order-service"

---
apiVersion: v1
kind: Service
metadata:
  name: order
  namespace: dtorders
  labels:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: order-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: order
  selector:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: order-service
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orders-ingress
  namespace: dtorders
spec:
  ingressClassName: nginx
  rules:
    - host: dtorders-order.dev.local.nip.io
      http:
        paths:
          - backend:
              service:
                name: order
                port:
                  number: 8080
            path: /
            pathType: Prefix

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: dtorders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dt-orders
      app.kubernetes.io/name: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: dt-orders
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/created-by: dynatrace-demos
      annotations:
        owner: Team Frontend
        chat-channel: dev-team-frontend
    spec:
      containers:
        - name: frontend
          image: dtdemos/dt-orders-frontend:1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: frontend
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dt-orders service=frontend"

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: dtorders
  labels:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: frontend
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: frontend
  selector:
    app.kubernetes.io/part-of: dt-orders
    app.kubernetes.io/name: frontend
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: dtorders
spec:
  ingressClassName: nginx
  rules:
    - host: dtorders-frontend.dev.local.nip.io
      http:
        paths:
          - backend:
              service:
                name: frontend
                port:
                  number: 80
            path: /
            pathType: Prefix

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-traffic
  namespace: dtorders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dt-orders
      app.kubernetes.io/name: load-traffic
  template:
    metadata:
      labels:
        app.kubernetes.io/name: load-traffic
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: traffic-simulation
        app.kubernetes.io/part-of: dt-orders
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/created-by: dynatrace-demos
    spec:
      containers:
        - name: load-traffic
          image: dtdemos/dt-orders-load:1
          imagePullPolicy: Always
          env:
            - name: HOSTNAME
              value: "frontend"
            - name: NUM_LOOPS
              value: "100000"
            - name: TEST_DEBUG
              value: "false"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: browser-traffic
  namespace: dtorders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dt-orders
      app.kubernetes.io/name: browser-traffic
  template:
    metadata:
      labels:
        app.kubernetes.io/name: browser-traffic
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: traffic-simulation
        app.kubernetes.io/part-of: dt-orders
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/created-by: dynatrace-demos
    spec:
      containers:
        - name: browser-traffic
          image: dtdemos/dt-orders-browser:1
          imagePullPolicy: Always
          env:
            - name: APP_URL
              value: "http://frontend"
            - name: SCRIPT_NUM_LOOPS
              value: "15000"
